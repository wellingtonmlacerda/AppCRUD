name: .NET Build CI HOMOLOGAÇÃO

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: well_self_host

    env:
      Solution_Name: App_Teste.sln
      Backup_Root_Dir: C:\backup_publish
      Publish_Dir: C:\AppCRUD

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Create a backup
      id: create_backup
      run: |
        $timestamp = Get-Date -Format "yyyyMMddHHmmss"
        $solutionName = $env:Solution_Name -replace '\.sln$', ''
        $backupDir = "$env:Backup_Root_Dir\$solutionName\$timestamp"
        if (-not (Test-Path -Path $backupDir)) {
          New-Item -ItemType Directory -Force -Path $backupDir
        }
        $backupFileName = "backup_$timestamp.zip"
        Compress-Archive -Path $env:Publish_Dir\* -DestinationPath "$backupDir/$backupFileName"
        echo "::set-output name=backup_dir::$backupDir"
      shell: pwsh

    - name: List directories and files
      run: Get-ChildItem -Path . -Recurse
      shell: pwsh

    - name: Find web .csproj files
      id: find_csproj
      run: |
        $csproj = Get-ChildItem -Path . -Recurse -Filter *.csproj | Where-Object { $_.Name -notlike 'DBAppCRUD*.csproj' } | Select-Object -First 1
        if ($csproj) {
          Write-Host "Found web .csproj file: $($csproj.FullName)"
          echo "csproj_path=$($csproj.FullName)" >> $GITHUB_ENV
        } else {
          Write-Host "No web .csproj file found."
          exit 1
        }
      shell: pwsh

    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v2

    - name: Restore the application
      run: msbuild ${{ env.csproj_path }} /t:Restore
      shell: pwsh

    - name: Build app for release
      run: msbuild ${{ env.csproj_path }} -t:rebuild -verbosity:diag -property:Configuration=Release
      shell: pwsh

    - name: Publish the application
      run: |
        if (-not (Test-Path -Path $env:Publish_Dir)) {
          New-Item -ItemType Directory -Force -Path $env:Publish_Dir
        }
        msbuild ${{ env.csproj_path }} /p:Configuration=Release /p:OutputPath=${{ env.Publish_Dir }}
      shell: pwsh

    - name: Upload backup artifact
      uses: actions/upload-artifact@v3
      with:
        name: Backup
        path: ${{ steps.create_backup.outputs.backup_dir }}/*.zip

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: Published App
        path: ${{ env.Publish_Dir }}
